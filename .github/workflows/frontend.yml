name: frontend-ci

on:
  push:
    paths:
      - "frontend/**"
      - ".github/workflows/frontend.yml"
  pull_request:
    paths:
      - "frontend/**"
      - ".github/workflows/frontend.yml"

jobs:
  detect-frontend:
    name: detect frontend presence
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: probe
        run: |
          if [ -f "frontend/package.json" ]; then
            echo "present=true" >> "$GITHUB_OUTPUT"
          else
            echo "present=false" >> "$GITHUB_OUTPUT"
          fi
    outputs:
      present: ${{ steps.probe.outputs.present }}

  build:
    name: build (Node)
    runs-on: ubuntu-latest
    needs: detect-frontend
    if: ${{ needs.detect-frontend.outputs.present == 'true' }}
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: "npm"
          cache-dependency-path: |
            frontend/package-lock.json
            frontend/pnpm-lock.yaml
            frontend/yarn.lock

      - name: Install deps
        run: |
          if [ -f "pnpm-lock.yaml" ]; then
            npm i -g pnpm && pnpm i --frozen-lockfile
          elif [ -f "yarn.lock" ]; then
            npm i -g yarn && yarn install --frozen-lockfile
          elif [ -f "package-lock.json" ]; then
            npm ci
          else
            npm install
          fi

      - name: Lint (optional)
        run: |
          if [ -f ".eslintrc.js" ] || [ -f ".eslintrc.cjs" ] || [ -f ".eslintrc.json" ]; then
            npx eslint . || true
          else
            echo "No ESLint config. Skipping."
          fi

      - name: Build
        run: |
          if jq -e '.scripts.build' package.json >/dev/null 2>&1; then
            npm run build
          else
            echo "No build script. Skipping."
          fi

  noop-when-missing:
    name: noop (no frontend yet)
    runs-on: ubuntu-latest
    needs: detect-frontend
    if: ${{ needs.detect-frontend.outputs.present != 'true' }}
    steps:
      - run: echo "frontend/package.json が無いのでスキップします。"
